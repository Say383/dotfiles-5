#+TITLE: README
#+SUBTITLE: My personal dotfiles
#+AUTHOR: Ben Mezger
#+DATE: <2020-08-06 Thu>

#+INFOJS_OPT: view:t toc:t ltoc:t mouse:underline

#+HUGO_AUTO_SET_LASTMOD: t
#+HUGO_BASE_DIR: .
#+HUGO_SECTION: .
#+EXPORT_FILE_NAME: .content/_index.md


[[https://github.com/benmezger/dotfiles/actions][https://github.com/benmezger/dotfiles/workflows/dotfiles/badge.svg]]

* Installing this configuration
** Requirements
- Chezmoi
- Archlinux or OSX
** Installing
*Note:* You are required to use the =env= variable =SECRETS_OFF=1=, as not passing will
make chezmoi fail when connecting to my bitwarden's account.

The following environment variables can be set to configure Chezmoi on runtime:

- =ASK=: Set to =1= if you want to enable chezmoi prompt
- =SECRETS_OFF=: Set to =1= to enable Bitwarden (uses my personal secrets set in
  .chezmoi.yaml)
- =DOTFILES_MINIMAL=: Set to =1= if you want to install the minimal version

Chezmoi allows easy install of this configuration by running the following
command:

*** Full version
#+BEGIN_SRC shell
SECRETS_OFF=1 chezmoi init https://github.com/benmezger/dotfiles.git -S ~/dotfiles
#+END_SRC
*** Minimal version
The minimal version installs only the essentials.

- zsh
- git
- vim
- emacs
- tmux
- curl
- alacritty
- neovim
- user-dirs
- editorconfig
- dircolors

#+BEGIN_SRC shell
SECRETS_OFF=1 DOTFILES_MINIMAL=1 chezmoi init https://github.com/benmezger/dotfiles.git -S ~/dotfiles
#+END_SRC

* Keybindings
** OSX
- =fn + cmd - e= - opens emacs
- =fn + cmd - i= - opens firefox
- =fn + cmd - f= - opens finder in $HOME
- =cmd + return= - opens alacritty
*** MPC
- =fn + cmd - f1= - mpc play
- =fn + cmd - f2= - mpc pause
- =fn + cmd - f3= - mpc prev
- =fn + cmd - f4= - mpc next
- =fn + cmd - f5= - mpc volume -10
- =fn + cmd - f6= - mpc volume +10

* Troubleshooting
** Chezmoi does not seem to reload the configuration
Run =chezmoi init <dotfiles-path>= again. This should reload the configuration
by copying [[file:.chezmoi.yaml.tmpl][chezmoi.yaml]] to =$HOME/.config/chezmoi/chezmoi.yaml=.
** Sourcing env with i3
For some reason, i3 is sourcing =.xprofile= instead of =xinitrc=, so for
getting Github plugin for the [[file:dot_config/i3/status.toml][i3status-rust]] you need to set up a variable in
your =.xprofile=
#+BEGIN_SRC shell
export I3RS_GITHUB_TOKEN="your-github-token"
#+END_SRC


* Local config :noexport:
#+NAME: org-hugo--get-pub-dir
#+BEGIN_SRC emacs-lisp :exports none
(defun org-hugo--get-pub-dir (info)
  "Return the post publication directory path.

The publication directory is created if it does not exist.

INFO is a plist used as a communication channel."
  (let* ((base-dir (if (plist-get info :hugo-base-dir)
                       (file-name-as-directory (plist-get info :hugo-base-dir))
                     (user-error "It is mandatory to set the HUGO_BASE_DIR property")))
         (content-dir ".content/")
         (section-path (org-hugo--get-section-path info))
         (bundle-dir (let ((bundle-path (or ;Hugo bundle set in the post subtree gets higher precedence
                                         (org-hugo--entry-get-concat nil "EXPORT_HUGO_BUNDLE" "/")
                                         (plist-get info :hugo-bundle)))) ;This is mainly to support per-file flow
                       (if bundle-path
                           (file-name-as-directory bundle-path)
                         "")))
         (pub-dir (let ((dir (concat base-dir content-dir section-path bundle-dir)))
                    (make-directory dir :parents) ;Create the directory if it does not exist
                    dir)))
    (file-truename pub-dir)))
#+END_SRC
